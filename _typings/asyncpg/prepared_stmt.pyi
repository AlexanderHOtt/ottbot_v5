import typing as t

from .protocol import Record

class PreparedStatement:
    async def fetchval(self, *args: t.Any, column: int = ..., timeout: float | None = ...) -> t.Any: ...
    async def fetchrow(self, *args: t.Any, timeout: float | None = ...,) -> Record | None: ...
    async def fetch(self, *args: t.Any, timeout: float | None = ...) -> list[Record]: ...
    async def executemany(self, args: t.Iterable[t.Any], *, timeout: float | None = ...) -> None: ...
